{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.2", "generated_at": "2024-06-20T19:08:19.583086Z", "invocation_id": "c1362127-8091-40d8-b18d-ee1d118288fa", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-20T19:08:04.839204Z", "completed_at": "2024-06-20T19:08:04.846483Z"}, {"name": "execute", "started_at": "2024-06-20T19:08:04.847009Z", "completed_at": "2024-06-20T19:08:06.880713Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.044135570526123, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.gcp_etl_dbt.stg_distribution_centers", "compiled": true, "compiled_code": "\n\nwith stg_distribution_centers as (\n    select \n        cast(id as int) as id,\n        cast(name as string) as name,\n        cast(latitude as float) as latitude,\n        cast(longitude as float) as longitude\n    from read_parquet('s3://pypi-gcp-duckdb-dbt-197398273774/distribution_centers.parquet')\n)\n\nselect * from stg_distribution_centers", "relation_name": "\"ecommerce\".\"the_look_ecommerce\".\"stg_distribution_centers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-20T19:08:06.886763Z", "completed_at": "2024-06-20T19:08:06.890734Z"}, {"name": "execute", "started_at": "2024-06-20T19:08:06.891336Z", "completed_at": "2024-06-20T19:08:08.989960Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.1052491664886475, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.gcp_etl_dbt.stg_events", "compiled": true, "compiled_code": "\n\nwith stg_events as (\n    select \n        cast(id as int) as id,\n        cast(user_id as int) as user_id,\n        cast(sequence_number as int) as sequence_number,\n        cast(session_id as string) as session_id,\n        cast(created_at as timestamp) as created_at,\n        cast(ip_address as string) as ip_address,\n        cast(city as string) as city,\n        cast(state as string) as state,\n        cast(postal_code as string) as postal_code,\n        cast(browser as string) as browser, \n        cast(traffic_source as string) as traffic_source,\n        cast(uri as string) as uri,\n        cast(event_type as string) as event_type\n    \n    from read_parquet('s3://pypi-gcp-duckdb-dbt-197398273774/events.parquet')\n)\n\nselect * from stg_events", "relation_name": "\"ecommerce\".\"the_look_ecommerce\".\"stg_events\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-20T19:08:08.995744Z", "completed_at": "2024-06-20T19:08:08.999377Z"}, {"name": "execute", "started_at": "2024-06-20T19:08:08.999377Z", "completed_at": "2024-06-20T19:08:11.020627Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.0264599323272705, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.gcp_etl_dbt.stg_inventory_items", "compiled": true, "compiled_code": "\n\nwith stg_invetory_items as (\n    select \n        cast(id as int) as id,\n        cast(product_id as int) as product_id,\n        cast(created_at as timestamp) as created_at,\n        cast(sold_at as timestamp) as sold_at,\n        cast(cost as float) as cost,\n        cast(product_category as string) as product_category,\n        cast(product_name as string) as product_name,\n        cast(product_brand as string) as product_brand,\n        cast(product_retail_price as float) as product_retail_price,\n        cast(product_department as string) as product_department,\n        cast(product_sku as string) as product_sku,\n        cast(product_distribution_center_id as int) as product_distribution_center_id\n    from read_parquet('s3://pypi-gcp-duckdb-dbt-197398273774/inventory_items.parquet')\n)\n\nselect * from stg_invetory_items", "relation_name": "\"ecommerce\".\"the_look_ecommerce\".\"stg_inventory_items\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-20T19:08:11.025629Z", "completed_at": "2024-06-20T19:08:11.028630Z"}, {"name": "execute", "started_at": "2024-06-20T19:08:11.028630Z", "completed_at": "2024-06-20T19:08:13.066077Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.0414488315582275, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.gcp_etl_dbt.stg_order_items", "compiled": true, "compiled_code": "\n\nwith stg_order_items as (\n    select \n        cast(id as int) as id,\n        cast(order_id as int) as order_id,\n        cast(user_id as int) as user_id,\n        cast(product_id as int) as product_id,\n        cast(inventory_item_id as int) as inventory_item_id,\n        cast(status as string) as status,\n        cast(created_at as timestamp) as created_at,\n        cast(shipped_at as timestamp) as shipped_at,\n        cast(delivered_at as timestamp) as delivered_at,\n        cast(returned_at as timestamp) as returned_at,\n        cast(sale_price as float) as sale_price\n    from read_parquet('s3://pypi-gcp-duckdb-dbt-197398273774/order_items.parquet')\n)\n\nselect * from stg_order_items", "relation_name": "\"ecommerce\".\"the_look_ecommerce\".\"stg_order_items\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-20T19:08:13.071074Z", "completed_at": "2024-06-20T19:08:13.076074Z"}, {"name": "execute", "started_at": "2024-06-20T19:08:13.076074Z", "completed_at": "2024-06-20T19:08:15.095501Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.026425838470459, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.gcp_etl_dbt.stg_orders", "compiled": true, "compiled_code": "\n\nwith stg_orders as (\n    select \n        cast(order_id as int) as order_id,\n        cast(user_id as int) as user_id,\n        cast(status as string) as status,\n        cast(gender as string) as gender,\n        cast(created_at as timestamp) as created_at,\n        cast(returned_at as timestamp) as returned_at,\n        cast(shipped_at as timestamp) as shipped_at,\n        cast(delivered_at as timestamp) as delivered_at,\n        cast(num_of_item as int) as num_of_item\n\n    from read_parquet('s3://pypi-gcp-duckdb-dbt-197398273774/orders.parquet')\n)\n\nselect * from stg_orders", "relation_name": "\"ecommerce\".\"the_look_ecommerce\".\"stg_orders\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-20T19:08:15.101500Z", "completed_at": "2024-06-20T19:08:15.104503Z"}, {"name": "execute", "started_at": "2024-06-20T19:08:15.105499Z", "completed_at": "2024-06-20T19:08:17.096161Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.9966607093811035, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.gcp_etl_dbt.stg_products", "compiled": true, "compiled_code": "\n\nwith stg_products as (\n    select \n        cast(id as int) as id,\n        cast(cost as float) as cost,\n        cast(category as string) as category,\n        cast(name as string) as name,\n        cast(brand as string) as brand,\n        cast(retail_price as float) as retail_price,\n        cast(department as string) as department,\n        cast(sku as string) as sku,\n        cast(distribution_center_id as int) as distribution_center_id\n\n    from read_parquet('s3://pypi-gcp-duckdb-dbt-197398273774/products.parquet')\n)\n\nselect * from stg_products", "relation_name": "\"ecommerce\".\"the_look_ecommerce\".\"stg_products\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-06-20T19:08:17.101163Z", "completed_at": "2024-06-20T19:08:17.105163Z"}, {"name": "execute", "started_at": "2024-06-20T19:08:17.105163Z", "completed_at": "2024-06-20T19:08:19.128009Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.027845859527588, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.gcp_etl_dbt.stg_users", "compiled": true, "compiled_code": "\n\nwith stg_users as (\n    select \n        cast(id as int) as id,\n        cast(first_name as string) as first_name,\n        cast(last_name as string) as last_name,\n        cast(email as string) as email,\n        cast(age as int) as age,\n        cast(gender as string),\n        cast(state as string) as state,\n        cast(street_address as string) as street_address,\n        cast(postal_code as string) as postal_code,\n        cast(city as string) as city,\n        cast(country as string) as country,\n        cast(latitude as float) as latitude,\n        cast(longitude as float) as longitude,\n        cast(traffic_source as string) as traffic_source,\n        cast(created_at as timestamp) as created_at\n\n    from read_parquet('s3://pypi-gcp-duckdb-dbt-197398273774/users.parquet')\n)\n\nselect * from stg_users", "relation_name": "\"ecommerce\".\"the_look_ecommerce\".\"stg_users\""}], "elapsed_time": 37.91220736503601, "args": {"log_path": "C:\\Users\\danie\\python-projects\\gcp-etl-dbt\\transform\\gcp_etl_dbt\\logs", "enable_legacy_logger": false, "printer_width": 80, "source_freshness_run_project_hooks": false, "strict_mode": false, "partial_parse": true, "use_colors": true, "log_format": "default", "version_check": true, "populate_cache": true, "log_level_file": "debug", "select": [], "indirect_selection": "eager", "target": "prod", "exclude": [], "which": "run", "require_resource_names_without_spaces": false, "warn_error_options": {"include": [], "exclude": []}, "invocation_command": "dbt run --target prod", "introspect": true, "defer": false, "log_file_max_bytes": 10485760, "vars": {}, "empty": false, "macro_debugging": false, "cache_selected_only": false, "use_colors_file": true, "write_json": true, "send_anonymous_usage_stats": true, "static_parser": true, "partial_parse_file_diff": true, "print": true, "log_level": "info", "project_dir": "C:\\Users\\danie\\python-projects\\gcp-etl-dbt\\transform\\gcp_etl_dbt", "log_format_file": "debug", "show_resource_report": false, "quiet": false, "favor_state": false, "require_explicit_package_overrides_for_builtin_materializations": true, "profiles_dir": "C:\\Users\\danie\\python-projects\\gcp-etl-dbt\\transform\\gcp_etl_dbt"}}